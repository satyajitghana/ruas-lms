{"version":3,"sources":["Api.js","Login.js","Register.js","StudentHome.js","App.js","serviceWorker.js","index.js","msruas_logo_symbol.png"],"names":["BASE_URL","tranlucentbg","backgroundColor","schema","yup","username","required","password","Login","props","JSON","parse","localStorage","getItem","this","history","replace","Container","className","fluid","Row","Col","sm","md","lg","Card","style","text","Img","variant","src","logo","validationSchema","onSubmit","values","setSubmitting","resetForm","axios","post","user_name","then","res","console","log","setItem","stringify","data","user","token","catch","err","error","response","message","initialValues","handleSubmit","handleChange","handleBlur","errors","touched","isValid","Form","Group","Label","InputGroup","Prepend","Text","icon","faUser","Control","type","name","value","onChange","isInvalid","placeholder","Feedback","controlId","faLock","Button","onClick","to","Component","registerSchema","reg_no","department","course","contact_no","Register","registerUser","faUserCircle","faIdCard","faIndustry","as","faAward","faPhone","RegisterForm","projectRegisterSchema","project_leader_regno","project_name","mentor_name","category","member1","member2","StudentHome","state","isLoading","isRoomDetailsLoading","roomDetails","projekt","showRegisterModal","get","setState","getRoomDetails","delete","id","fetchProjektDetails","payload","students","Modal","show","onHide","size","aria-labelledby","centered","Header","closeButton","Title","Body","Footer","Spinner","animation","xl","bookTable","room_name","table_no","deregisterTable","Table","striped","bordered","members","map","e","i","key","deregisterProject","registerProjectModal","Navbar","expand","sticky","Brand","href","alt","width","height","Toggle","Collapse","removeItem","ProjektDetails","bg","RoomDetails","fixed","role","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","rel","crossorigin","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.6ca0e80c.chunk.js","sourcesContent":["const BASE_URL = 'https://ruas-lms.herokuapp.com/';\r\n\r\nexport { BASE_URL }","import React, { Component } from 'react';\r\n\r\nimport './Login.css';\r\nimport { Row, Container, Card, Form, Col, InputGroup, Button, Toast } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport { faUser, faLock } from '@fortawesome/free-solid-svg-icons'\r\nimport * as yup from 'yup';\r\nimport logo from './msruas_logo_symbol.png'\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { Formik } from 'formik';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from './Api';\r\n\r\nconst tranlucentbg = { backgroundColor: 'rgba(77, 94, 114, 0.5)' };\r\n\r\nconst schema = yup.object({\r\n    username: yup.string().required(),\r\n    password: yup.string().required(),\r\n});\r\n\r\nclass Login extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n        if (user != null) {\r\n            this.props.history.replace('/home');\r\n            return;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"login-page fill-window\" fluid>\r\n                <Row className=\"m-auto\" >\r\n                    <Col sm={9} md={7} lg={6} className=\"mx-auto my-auto\">\r\n                        <Card className=\"login-card shadow shadow-lg my-5 p-5 text-white rounded\" style={tranlucentbg} text=\"white\">\r\n                            <Row className=\"mb-3\">\r\n                                <Col sm={4} md={4} className=\"my-auto\"><Card.Img variant=\"top\" src={logo} /></Col>\r\n                                <Col sm={8} md={8} lg={8} className=\"h1 my-auto font-weight-bold text-right\" >RUAS LMS </Col>\r\n                            </Row>\r\n                            <Row className=\"h1 mx-auto\"> Login </Row>\r\n\r\n                            <Formik\r\n                                validationSchema={schema}\r\n                                onSubmit={(values, { setSubmitting, resetForm }) => {\r\n\r\n                                    setSubmitting(true);\r\n\r\n                                    axios.post(BASE_URL + 'student/login', { user_name: values.username, password: values.password })\r\n                                        .then((res) => {\r\n                                            console.log(res);\r\n\r\n                                            localStorage.setItem('user', JSON.stringify(res.data.user));\r\n                                            localStorage.setItem('token', res.data.token);\r\n\r\n                                            resetForm();\r\n\r\n                                            this.props.history.replace('/home');\r\n\r\n                                        })\r\n                                        .catch((err) => {\r\n                                            console.error(err.response.data.message);\r\n                                        });\r\n\r\n\r\n                                    setSubmitting(false);\r\n                                }}\r\n                                initialValues={{\r\n                                    username: '',\r\n                                    password: '',\r\n                                }}\r\n                            >\r\n                                {({\r\n                                    handleSubmit,\r\n                                    handleChange,\r\n                                    handleBlur,\r\n                                    values,\r\n                                    touched,\r\n                                    isValid,\r\n                                    errors,\r\n                                }) => (\r\n                                        <Form className=\"my-2\">\r\n                                            <Form.Group>\r\n                                                <Form.Label className=\"h6 mb-3\" >Username</Form.Label>\r\n                                                <InputGroup>\r\n                                                    <InputGroup.Prepend>\r\n                                                        <InputGroup.Text className=\"bg-light text-dark\" ><FontAwesomeIcon icon={faUser} /></InputGroup.Text>\r\n                                                    </InputGroup.Prepend>\r\n                                                    <Form.Control type=\"text\" name=\"username\" value={values.username} onChange={handleChange} isInvalid={!!errors.username} placeholder=\"17ETCS002159\" />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {errors.username}\r\n                                                    </Form.Control.Feedback>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                            <Form.Group controlId=\"formBasicPassword\">\r\n                                                <Form.Label className=\"h6 mb-3\">Password</Form.Label>\r\n                                                <InputGroup>\r\n                                                    <InputGroup.Prepend>\r\n                                                        <InputGroup.Text className=\"bg-light text-dark\" > <FontAwesomeIcon icon={faLock} />  </InputGroup.Text>\r\n                                                    </InputGroup.Prepend>\r\n                                                    <Form.Control type=\"password\" name=\"password\" values={values.password} onChange={handleChange} isInvalid={!!errors.password} placeholder=\"************\" />\r\n                                                    <Form.Control.Feedback type=\"invalid\">\r\n                                                        {errors.password}\r\n                                                    </Form.Control.Feedback>\r\n                                                </InputGroup>\r\n                                            </Form.Group>\r\n                                            <Row className=\"mx-auto\">\r\n                                                <Button variant=\"dark\" className=\"px-5 mt-3 mb-0 mx-auto\" onClick={handleSubmit}>Login</Button>\r\n                                            </Row>\r\n                                        </Form>\r\n                                    )}\r\n                            </Formik>\r\n                            <Button variant=\"link text-light ml-auto text-right mb-0\"><Link to=\"/register\">Register</Link> </Button>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Col, Card, Form, InputGroup, Button } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faUser, faLock, faUserCircle, faIdCard, faIndustry, faAward, faPhone } from '@fortawesome/free-solid-svg-icons'\r\nimport logo from './msruas_logo_symbol.png'\r\n\r\nimport axios from 'axios';\r\nimport { BASE_URL } from './Api';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport \"./Register.css\"\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\nconst tranlucentbg = { backgroundColor: 'rgba(77, 94, 114, 0.5)' };\r\n\r\nconst registerSchema = yup.object({\r\n    user_name: yup.string().required(),\r\n    password: yup.string().required(),\r\n    reg_no: yup.string().required(),\r\n    name: yup.string().required(),\r\n    department: yup.string().required(),\r\n    course: yup.string().required(),\r\n    contact_no: yup.string().required(),\r\n})\r\n\r\nclass Register extends Component {\r\n\r\n    registerUser(user) {\r\n        axios.post(BASE_URL + 'student/register', user)\r\n            .then((res) => {\r\n                this.props.history.replace('/login');\r\n            })\r\n            .catch(console.error);\r\n    }\r\n\r\n    RegisterForm() {\r\n        return (\r\n            <Formik\r\n                validationSchema={registerSchema}\r\n                onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                    setSubmitting(true);\r\n                    this.registerUser(values);\r\n                    setSubmitting(false);\r\n                }}\r\n                initialValues={{\r\n                    user_name: '',\r\n                    password: '',\r\n                    reg_no: '',\r\n                    name: '',\r\n                    department: 'CSE',\r\n                    course: 'B.Tech',\r\n                    contact_no: '',\r\n                }}\r\n            >\r\n                {({\r\n                    handleSubmit,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    values,\r\n                    touched,\r\n                    isValid,\r\n                    errors,\r\n                }) => (\r\n                        <div>\r\n                            <Row>\r\n                                <Col lg={6} className=\"border-right\">\r\n                                    <Form className=\"my-2\">\r\n                                        <Form.Group>\r\n                                            <Form.Label >Username</Form.Label>\r\n                                            <InputGroup>\r\n                                                <InputGroup.Prepend>\r\n                                                    <InputGroup.Text className=\"bg-light text-dark\" ><FontAwesomeIcon icon={faUser} /></InputGroup.Text>\r\n                                                </InputGroup.Prepend>\r\n                                                <Form.Control type=\"text\" name=\"user_name\" value={values.user_name} onChange={handleChange} placeholder=\"17ETCS002159\" />\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Password</Form.Label>\r\n                                            <InputGroup>\r\n                                                <InputGroup.Prepend>\r\n                                                    <InputGroup.Text className=\"bg-light text-dark\" > <FontAwesomeIcon icon={faLock} />  </InputGroup.Text>\r\n                                                </InputGroup.Prepend>\r\n                                                <Form.Control type=\"password\" name=\"password\" value={values.password} onChange={handleChange} placeholder=\"************\" />\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                </Col>\r\n                                <Col lg={6}>\r\n                                    <Form className=\"my-2\">\r\n                                        <Form.Group>\r\n                                            <Form.Label>Name</Form.Label>\r\n                                            <InputGroup>\r\n                                                <InputGroup.Prepend>\r\n                                                    <InputGroup.Text className=\"bg-light text-dark\" ><FontAwesomeIcon icon={faUserCircle} /></InputGroup.Text>\r\n                                                </InputGroup.Prepend>\r\n                                                <Form.Control type=\"text\" name=\"name\" value={values.name} onChange={handleChange} placeholder=\"Satyajit Ghana\" />\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                        <Form.Group>\r\n                                            <Form.Label>USN Number</Form.Label>\r\n                                            <InputGroup>\r\n                                                <InputGroup.Prepend>\r\n                                                    <InputGroup.Text className=\"bg-light text-dark\" ><FontAwesomeIcon icon={faIdCard} /></InputGroup.Text>\r\n                                                </InputGroup.Prepend>\r\n                                                <Form.Control type=\"text\" name=\"reg_no\" value={values.reg_no} onChange={handleChange} placeholder=\"17ETCS002159\" />\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Form.Group>\r\n                                                    <Form.Label>Department</Form.Label>\r\n                                                    <InputGroup>\r\n                                                        <InputGroup.Prepend>\r\n                                                            <InputGroup.Text className=\"bg-light text-dark\" ><FontAwesomeIcon icon={faIndustry} /></InputGroup.Text>\r\n                                                        </InputGroup.Prepend>\r\n                                                        <Form.Control as=\"select\" name=\"department\" value={values.department} onChange={handleChange} >\r\n                                                            <option>CSE</option>\r\n                                                            <option>EEE</option>\r\n                                                            <option>ECE</option>\r\n                                                            <option>CIVIL</option>\r\n                                                        </Form.Control>\r\n                                                    </InputGroup>\r\n                                                </Form.Group>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Form.Group>\r\n                                                    <Form.Label>Course</Form.Label>\r\n                                                    <InputGroup>\r\n                                                        <InputGroup.Prepend>\r\n                                                            <InputGroup.Text className=\"bg-light text-dark\" ><FontAwesomeIcon icon={faAward} /></InputGroup.Text>\r\n                                                        </InputGroup.Prepend>\r\n                                                        <Form.Control as=\"select\" name=\"course\" value={values.course} onChange={handleChange} >\r\n                                                            <option>B.Tech</option>\r\n                                                            <option>M.Tech</option>\r\n                                                        </Form.Control>\r\n                                                    </InputGroup>\r\n                                                </Form.Group>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Form.Group>\r\n                                            <Form.Label>Contact No.</Form.Label>\r\n                                            <InputGroup>\r\n                                                <InputGroup.Prepend>\r\n                                                    <InputGroup.Text className=\"bg-light text-dark\" ><FontAwesomeIcon icon={faPhone} /></InputGroup.Text>\r\n                                                </InputGroup.Prepend>\r\n                                                <Form.Control type=\"text\" name=\"contact_no\" value={values.contact_no} onChange={handleChange} placeholder=\"7892137665\" />\r\n                                            </InputGroup>\r\n                                        </Form.Group>\r\n                                    </Form>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Button variant=\"dark\" className=\"mt-5 mb-0 mx-auto px-5\" onClick={handleSubmit} >Register</Button>\r\n                            </Row>\r\n                        </div>\r\n                    )}\r\n            </Formik>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"register-page fill-window\" fluid>\r\n                <Container>\r\n                    <Row className=\"m-auto\" >\r\n\r\n                        <Col sm={8} md={8} lg={10} className=\"mx-auto my-auto\">\r\n                            <Card className=\"shadow shadow-lg my-5 p-5 text-white rounded\" style={tranlucentbg} text=\"white\">\r\n                                <Row className=\"mb-3 mx-auto\">\r\n                                    <Col sm={2} md={2} lg={2} className=\"ml-auto\"><Card.Img variant=\"top\" src={logo} /></Col>\r\n                                    <Col sm={6} md={6} lg={4} className=\"h1 my-auto font-weight-bold mr-auto\" >RUAS LMS </Col>\r\n                                </Row>\r\n                                <Row className=\"h1 mx-auto mb-4\">Register</Row>\r\n                                {this.RegisterForm()}\r\n                                <Row>\r\n                                    <Button variant=\"link text-light m-0 p-0 ml-auto text-right mb-0\"> <Link to=\"/login\">Back to Login </Link></Button>\r\n                                </Row>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Register;\r\n","import React, { Component } from 'react';\r\nimport { Container, Row, Button, Col, Table, Card, Spinner, Modal, Form, InputGroup } from 'react-bootstrap';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport axios from 'axios';\r\nimport { BASE_URL } from './Api';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport logo from './msruas_logo_symbol.png'\r\n\r\nimport './StudentHome.css'\r\n\r\nconst tranlucentbg = { backgroundColor: 'rgba(74, 177, 157, 0.8)' };\r\n\r\nconst projectRegisterSchema = yup.object({\r\n    project_leader_regno: yup.string().required(),\r\n    project_name: yup.string().required(),\r\n    mentor_name: yup.string().required(),\r\n    department: yup.string().required(),\r\n    category: yup.string().required(),\r\n    member1: yup.string().required(),\r\n    member2: yup.string().required(),\r\n});\r\n\r\nclass StudentHome extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            user: null,\r\n            isLoading: true,\r\n            isRoomDetailsLoading: true,\r\n            roomDetails: null,\r\n            projekt: null,\r\n            error: null,\r\n            showRegisterModal: false\r\n        }\r\n    }\r\n\r\n\r\n    fetchProjektDetails() {\r\n\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n        if (user != null) {\r\n            axios.get(BASE_URL + 'projekt/from-reg-no/' + user.reg_no)\r\n                .then((res) => {\r\n                    this.setState({\r\n                        projekt: res.data,\r\n                        isLoading: false,\r\n                    });\r\n\r\n                    this.getRoomDetails();\r\n                })\r\n                .catch((err) => {\r\n                    this.setState({\r\n                        error: err.response.data.message,\r\n                        isLoading: false,\r\n                    })\r\n                });\r\n        }\r\n    }\r\n\r\n    deregisterProject() {\r\n        axios.delete(BASE_URL + 'projekt/' + this.state.projekt.id)\r\n            .then((res) => {\r\n                this.setState({\r\n                    projekt: null\r\n                });\r\n            });\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n        if (user == null) {\r\n            this.props.history.replace('/login');\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            user: user,\r\n        });\r\n\r\n        this.fetchProjektDetails();\r\n\r\n    }\r\n\r\n    registerProjectModal() {\r\n        return (\r\n\r\n            <Formik\r\n                validationSchema={projectRegisterSchema}\r\n                onSubmit={(values, { setSubmitting, resetForm }) => {\r\n                    setSubmitting(true);\r\n\r\n                    const payload = {\r\n                        project_leader_regno: values.project_leader_regno,\r\n                        project_name: values.project_name,\r\n                        mentor_name: values.mentor_name,\r\n                        department: values.department,\r\n                        category: values.category,\r\n                        students: [values.project_leader_regno, values.member1, values.member2]\r\n                    }\r\n\r\n                    axios.post(BASE_URL + 'projekt/register', payload)\r\n                        .then((res) => {\r\n                            // fetch the project details now\r\n                            this.fetchProjektDetails();\r\n                            this.setState({ showRegisterModal: false });\r\n                        })\r\n                        .catch((err) => {\r\n                            console.error(err);\r\n                        });\r\n\r\n                    setSubmitting(false);\r\n                }}\r\n                initialValues={{\r\n                    project_leader_regno: '',\r\n                    project_name: '',\r\n                    mentor_name: '',\r\n                    department: 'CSE',\r\n                    category: '',\r\n                    member1: '',\r\n                    member2: '',\r\n                }}\r\n            >\r\n                {({\r\n                    handleSubmit,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    values,\r\n                    touched,\r\n                    isValid,\r\n                    errors,\r\n                }) => (\r\n\r\n                        <Modal\r\n                            show={this.state.showRegisterModal}\r\n                            onHide={() => this.setState({ showRegisterModal: false })}\r\n                            size=\"lg\"\r\n                            aria-labelledby=\"contained-modal-title-vcenter\"\r\n                            centered\r\n                        >\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title id=\"contained-modal-title-vcenter\">Register your Projekt</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <Row>\r\n                                    <Col lg={6} className=\"border-right px-4\">\r\n                                        <Form className=\"my-2\">\r\n                                            <Form.Group>\r\n                                                <Form.Label>Project Name</Form.Label>\r\n                                                <Form.Control type=\"text\" name=\"project_name\" value={values.project_name} onChange={handleChange} placeholder=\"\" />\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Form.Label>Mentor Name</Form.Label>\r\n                                                <Form.Control type=\"text\" name=\"mentor_name\" value={values.mentor_name} onChange={handleChange} placeholder=\"\" />\r\n                                            </Form.Group>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Form.Group>\r\n                                                        <Form.Label>Department</Form.Label>\r\n\r\n                                                        <Form.Control as=\"select\" name=\"department\" value={values.department} onChange={handleChange} >\r\n                                                            <option>CSE</option>\r\n                                                            <option>EEE</option>\r\n                                                            <option>ECE</option>\r\n                                                            <option>CIVIL</option>\r\n                                                        </Form.Control>\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Form.Group>\r\n                                                        <Form.Label>Category</Form.Label>\r\n                                                        <Form.Control type=\"text\" name=\"category\" value={values.category} onChange={handleChange} placeholder=\"\" />\r\n                                                    </Form.Group>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n\r\n                                        </Form>\r\n                                    </Col>\r\n                                    <Col lg={6} className=\"px-4\">\r\n                                        <Form className=\"my-2\">\r\n                                            <Form.Group>\r\n                                                <Form.Label >#1 Project Leader USN No</Form.Label>\r\n                                                <Form.Control type=\"text\" name=\"project_leader_regno\" value={values.project_leader_regno} onChange={handleChange} placeholder=\"\" />\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Form.Label>#2 Member USN</Form.Label>\r\n                                                <Form.Control type=\"text\" name=\"member1\" value={values.member1} onChange={handleChange} placeholder=\"\" />\r\n                                            </Form.Group>\r\n                                            <Form.Group>\r\n                                                <Form.Label>#3 Member USN</Form.Label>\r\n                                                <Form.Control type=\"text\" name=\"member2\" value={values.member2} onChange={handleChange} placeholder=\"\" />\r\n                                            </Form.Group>\r\n                                        </Form>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"primary\" className=\"mr-3\" onClick={handleSubmit}>Register</Button>\r\n                                <Button variant=\"danger\" onClick={() => this.setState({ showRegisterModal: false })}>Close</Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                    )}\r\n\r\n            </Formik>\r\n\r\n        );\r\n    }\r\n\r\n    getRoomDetails() {\r\n        if (this.state.user == null)\r\n            return;\r\n\r\n        if (this.state.projekt == null)\r\n            this.setState({ isRoomDetailsLoading: false, roomDetails: null })\r\n\r\n        axios.get(BASE_URL + 'exhibition/' + this.state.projekt.id)\r\n            .then((res) => {\r\n                console.log('Hi');\r\n                this.setState({\r\n                    isRoomDetailsLoading: false,\r\n                    roomDetails: res.data,\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                this.setState({\r\n                    isRoomDetailsLoading: false,\r\n                    roomDetails: null,\r\n                })\r\n            });\r\n    }\r\n\r\n    bookTable() {\r\n        if (this.state.projekt == null)\r\n            return;\r\n\r\n        axios.post(BASE_URL + 'exhibition/register/' + this.state.projekt.id)\r\n            .then((res) => {\r\n                this.getRoomDetails();\r\n            });\r\n    }\r\n\r\n    RoomDetails() {\r\n        if (this.state.isRoomDetailsLoading) {\r\n\r\n            return (\r\n                <Row className=\"mx-auto\">\r\n                    <Col className=\"mx-auto\">\r\n                        <Spinner animation=\"grow\" /> Loading . . .\r\n                                        </Col>\r\n                </Row>\r\n            )\r\n        }\r\n\r\n        if (this.state.projekt == null) {\r\n\r\n            return (\r\n                <Row>\r\n                    <Col md={6} xl={6} className=\"\">You have not register a project yet </Col>\r\n                </Row>\r\n            )\r\n        }\r\n\r\n        if (this.state.roomDetails == null) {\r\n            return (\r\n                <Row>\r\n                    <Col md={6} xl={6} className=\"\">You have not booked a table for the exhibition <Button variant=\"info\" className=\"ml-5 shadow\" onClick={() => { this.bookTable(); }} >Book Now</Button></Col>\r\n                </Row>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Card.Text>\r\n                    You have been alloted to <strong>{' '} Room {this.state.roomDetails.room_name}</strong> at <strong>{' '} Table {this.state.roomDetails.table_no}</strong>\r\n                </Card.Text>\r\n                <Button variant=\"danger\" onClick={() => this.deregisterTable()} >Cancel Booking</Button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    deregisterTable() {\r\n        axios.delete(BASE_URL + 'exhibition/deregister/' + this.state.projekt.id)\r\n            .then((res) => {\r\n                this.setState({\r\n                    roomDetails: null,\r\n                });\r\n                this.getRoomDetails();\r\n            });\r\n    }\r\n\r\n    ProjektDetails() {\r\n\r\n        if (this.state.isLoading)\r\n\r\n            return (\r\n                <Row className=\"mx-auto\">\r\n                    <Col className=\"mx-auto\">\r\n                        <Spinner animation=\"grow\" /> Loading . . .\r\n                                        </Col>\r\n                </Row>\r\n            )\r\n\r\n        if (this.state.projekt == null) {\r\n            return (\r\n                <Row>\r\n                    <Col md={6} xl={6} className=\"\">You have not registered your group project <Button variant=\"info\" className=\"ml-5 shadow\" onClick={() => this.setState({ showRegisterModal: true })} >Register Now</Button></Col>\r\n                </Row>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Row>\r\n                <Col md={6} xl={6} className=\"\">\r\n\r\n                    <h4 className=\"mb-4\" >Details</h4>\r\n                    <Table striped bordered variant=\"dark\">\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>Project Name</td>\r\n                                <td>{this.state.projekt.project_name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Team Leader</td>\r\n                                <td>{this.state.projekt.project_leader_regno}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Mentor Name</td>\r\n                                <td>{this.state.projekt.mentor_name}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Department</td>\r\n                                <td>{this.state.projekt.department}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>Category</td>\r\n                                <td>{this.state.projekt.category}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n                <Col md={6} xl={6} className=\"\">\r\n                    <h4 className=\"mb-4\" >Team Members</h4>\r\n                    <Table striped bordered variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>Name</th>\r\n                                <th>USN</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n\r\n                            {this.state.projekt.members.map((e, i) => {\r\n                                return (\r\n                                    <tr key={i}>\r\n                                        <td>{i + 1}</td>\r\n                                        <td>{e.name}</td>\r\n                                        <td>{e.reg_no}</td>\r\n                                    </tr>\r\n                                );\r\n                            })}\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                    <Button className=\"mt-2 warning\" onClick={() => this.deregisterProject()} >De-Register Project</Button>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    checkAuthentication() {\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n        if (user == null) {\r\n            this.props.history.replace('/login');\r\n\r\n            return (\r\n                <h1>401: UNAUTHORIZED</h1>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"home-page meow\">\r\n                {this.registerProjectModal()}\r\n                <Container>\r\n                    <Navbar variant=\"dark\" expand=\"lg\" sticky=\"top\" style={tranlucentbg}>\r\n                        <Navbar.Brand href=\"#home\">\r\n                            <img\r\n                                alt=\"\"\r\n                                src={logo}\r\n                                width=\"25\"\r\n                                height=\"30\"\r\n                                className=\"align-top font-weight-bold\"\r\n                            />\r\n                            {' '} RUAS LMS\r\n                        </Navbar.Brand>\r\n                        <Navbar.Toggle />\r\n                        <Navbar.Collapse className=\"justify-content-end\">\r\n                            <Navbar.Text>\r\n                                Signed in as: <a href=\"#login\">{user.reg_no}</a>\r\n                            </Navbar.Text>\r\n\r\n                            <Button variant=\"danger\" className=\"ml-4\" onClick={() => {\r\n                                localStorage.removeItem('token');\r\n                                localStorage.removeItem('user');\r\n\r\n                                this.props.history.replace('/login');\r\n                            }} >Logout</Button>\r\n                        </Navbar.Collapse>\r\n                    </Navbar>\r\n                </Container>\r\n                <Container className=\"\">\r\n                    <Col lg={8} className=\"mx-auto mb-5\">\r\n                        <Row className=\"border-bottom\">\r\n                            <h1 className=\"mx-auto my-5\">👋 Hi {user.name} !</h1>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col className=\"mb-5\">\r\n                        <Card>\r\n                            <Card.Header as=\"h1\">Projekt Exhibition</Card.Header>\r\n                            <Card.Body>\r\n                                {this.ProjektDetails()}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                        <Card bg='primary' text='white'>\r\n                            <Card.Header as=\"h4\">Room Allotment</Card.Header>\r\n                            <Card.Body>\r\n                                {this.RoomDetails()}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Container>\r\n\r\n                <Container>\r\n                    <Navbar variant=\"dark\" fixed=\"bottom\">\r\n                        <Container>\r\n                            <Col lg={8} className=\"mx-auto\">\r\n                                <Row>\r\n                                    <h5 className=\"mx-auto\">Made with 💖 and ☕ by shadowleaf</h5>\r\n                                </Row>\r\n                            </Col>\r\n                        </Container>\r\n\r\n                    </Navbar>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StudentHome;\r\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport Login from './Login'\nimport Register from './Register'\nimport StudentHome from './StudentHome'\nimport { Container, Navbar, Col, Row } from 'react-bootstrap';\n\nfunction Footer() {\n  return (\n\n    <Container>\n      <Navbar variant=\"dark\" fixed=\"bottom\">\n        <Container>\n          <Col lg={8} className=\"mx-auto\">\n            <Row>\n              <h5 className=\"mx-auto\">Made with <span role=\"img\">💖</span> and <span role=\"img\">☕</span> by shadowleaf</h5>\n            </Row>\n          </Col>\n        </Container>\n\n      </Navbar>\n    </Container>\n  )\n}\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/login' component={Login} />\n        <Route path='/register' component={Register} />\n        <Route path='/home' component={StudentHome} />\n      </Switch>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Container, Navbar, Col, Row } from 'react-bootstrap';\n\nReactDOM.render(\n  <React.StrictMode>\n    <link\n      rel=\"stylesheet\"\n      href=\"https://bootswatch.com/4/superhero/bootstrap.min.css\"\n      crossorigin=\"anonymous\"\n    />\n    <link\n      href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\" rel=\"stylesheet\"\n      crossorigin=\"anonymous\"\n    />\n\n    <div>\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/msruas_logo_symbol.b7d9acdd.png\";"],"sourceRoot":""}